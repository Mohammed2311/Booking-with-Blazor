// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace BlazorServer.Pages.HotelRoom
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\ccc\Desktop\New folder (10)\Booking-with-Blazor\BlazorServer\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\ccc\Desktop\New folder (10)\Booking-with-Blazor\BlazorServer\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\ccc\Desktop\New folder (10)\Booking-with-Blazor\BlazorServer\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\ccc\Desktop\New folder (10)\Booking-with-Blazor\BlazorServer\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\ccc\Desktop\New folder (10)\Booking-with-Blazor\BlazorServer\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\ccc\Desktop\New folder (10)\Booking-with-Blazor\BlazorServer\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\ccc\Desktop\New folder (10)\Booking-with-Blazor\BlazorServer\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\ccc\Desktop\New folder (10)\Booking-with-Blazor\BlazorServer\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\ccc\Desktop\New folder (10)\Booking-with-Blazor\BlazorServer\_Imports.razor"
using BlazorServer;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\ccc\Desktop\New folder (10)\Booking-with-Blazor\BlazorServer\_Imports.razor"
using BlazorServer.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\ccc\Desktop\New folder (10)\Booking-with-Blazor\BlazorServer\_Imports.razor"
using BlazorServer.Pages.LearnBlazorComponants;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\ccc\Desktop\New folder (10)\Booking-with-Blazor\BlazorServer\_Imports.razor"
using Busniss.Interfaces;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\ccc\Desktop\New folder (10)\Booking-with-Blazor\BlazorServer\_Imports.razor"
using Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "C:\Users\ccc\Desktop\New folder (10)\Booking-with-Blazor\BlazorServer\_Imports.razor"
using BlazorServer.Helper;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\ccc\Desktop\New folder (10)\Booking-with-Blazor\BlazorServer\Pages\HotelRoom\UpsertRoom.razor"
using BlazorServer.Services.IServices;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/hotel-room/create")]
    [Microsoft.AspNetCore.Components.RouteAttribute("/hotel-room/edit/{id:int}")]
    public partial class UpsertRoom : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 87 "C:\Users\ccc\Desktop\New folder (10)\Booking-with-Blazor\BlazorServer\Pages\HotelRoom\UpsertRoom.razor"
       
    [Parameter]
    public int? Id { get; set; }
    public string Title { get; set; } = "Create";
    public HotelRoomDTO HotelRoom { get; set; } = new HotelRoomDTO();
    public HotelRoomImageDTO RoomImg { get; set; } = new HotelRoomImageDTO();
    public int RId { get; set; }

    public bool IsProgressed { get; set; } = false;

    public List<string> DeletedImgs { get; set; } = new List<string>();

    protected override async Task OnInitializedAsync()
    {
        if (Id!=null)
        {
            Title = "Update";
            HotelRoom = await hotelRep.GetHotelRoom(Id.Value);
            if (HotelRoom?.HotelRoomImages != null)
            {
                HotelRoom.ImageUrls = HotelRoom.HotelRoomImages.Select(i => i.ImgUrl).ToList();
            }

        }
        else
        {
            HotelRoom = new HotelRoomDTO();
            Title ="Create";
        }
    }
    private async Task HandleHotelRoom()
    {
        try
        {
            if (HotelRoom.Id !=0&&Title== "Update")
            {
                //update
                var updatedRoom =  await hotelRep.UpdateHotelRoom(HotelRoom);
                if (HotelRoom.ImageUrls!=null &&HotelRoom.ImageUrls.Any())
                {
                    if (DeletedImgs!=null && DeletedImgs.Any())
                    {
                        foreach (var item in DeletedImgs)
                        {
                            var imgName = item.Replace($"{manger.BaseUri}RoomImgs/", "");
                            var res = fileUploader.DeleteFile(imgName);
                            await imgRep.DealeteHotelRoomImageByImgName(item);

                        }
                    }
                    await AddHotelRoomImg(updatedRoom);
                }
                await jsRuntime.ToasterSucess("Updated sucessfully");

                manger.NavigateTo("hotel-room");

            }
            if (HotelRoom.Id==0 &&Title== "Create")
            {
                //create
                var isUnique = await hotelRep.IsHotelExists(HotelRoom.Name);
                if (isUnique != null)
                {
                    await jsRuntime.ToasterError("There is another room by this name");
                }
                else
                {
                    var createdRoom = await hotelRep.CreateHotelRoom(HotelRoom);

                    await AddHotelRoomImg(createdRoom);
                    await jsRuntime.ToasterSucess("Created sucessfully");



                    manger.NavigateTo("hotel-room");
                }
            }
        }
        catch (Exception ex)
        {

            throw ex;
        }


    }

    private async Task AddHotelRoomImg(HotelRoomDTO roomDTO)
    {

        foreach (var item in HotelRoom.ImageUrls)
        {
            if ( Title=="Create")
            {
                RoomImg = new HotelRoomImageDTO()
                {
                    ImgUrl = item,
                    RoomId = roomDTO.Id,

                };

                await imgRep.CreateHotelRoomImage(RoomImg);
            }
            else
            {
                if (HotelRoom.HotelRoomImages.Where(x => x.ImgUrl == item).Count() == 0)
                {
                    RoomImg = new HotelRoomImageDTO()
                    {
                        ImgUrl = item,
                        RoomId = roomDTO.Id,

                    };

                    await imgRep.CreateHotelRoomImage(RoomImg);

                }
            }


        }
    }

    private async Task HandleImgUpload(InputFileChangeEventArgs e)
    {
        try
        {
            var imgs = new List<string>();
            IsProgressed = true;
            if (e.GetMultipleFiles().Count > 0)
            {
                foreach (var item in e.GetMultipleFiles())
                {
                    System.IO.FileInfo fileInfo = new System.IO.FileInfo(item.Name);
                    if (fileInfo.Extension.ToLower() == ".jpg" || fileInfo.Extension.ToLower() == ".jpeg" || fileInfo.Extension.ToLower() == ".png")
                    {
                        var filePath = await fileUploader.UploadFile(item);
                        imgs.Add(filePath);
                    }
                    else
                    {
                        await jsRuntime.ToasterError("Select .Jpg  , png , jpg");

                    }
                }
                // اللي فوق متملتش array الايرور هنا هيحصل ان ال
                //    بمعني اني معرفتش اعمل ابلود للصور 
                if (imgs.Any())
                {
                    if (HotelRoom.ImageUrls != null && HotelRoom.ImageUrls.Any())
                    {
                        HotelRoom.ImageUrls.AddRange(imgs);
                    }
                    else
                    {
                        HotelRoom.ImageUrls = new List<string>();
                        HotelRoom.ImageUrls.AddRange(imgs);
                    }
                }
                else
                {
                    await jsRuntime.ToasterError("Can't Upload Photos");
                }

            }
            IsProgressed = false;

        }
        catch (Exception ex)
        {

            await jsRuntime.ToasterError(ex.Message);
        }
    }
    private async Task HandleDeleteImg(string imgUrl)
    {
        try
        {
            var imgIndex = HotelRoom.ImageUrls.FindIndex(x => x == imgUrl);
            var imgName = imgUrl.Replace($"{manger.BaseUri}RoomImgs/", "");
            if (HotelRoom.Id==0 &&Title == "Create")
            {
                fileUploader.DeleteFile(imgName);

            }
            else if(HotelRoom.Id != 0 && Title == "Update")
            {
                DeletedImgs??= new List<string>();
                DeletedImgs.Add(imgUrl);

            }
            HotelRoom.ImageUrls.RemoveAt(imgIndex);
        }
        catch (Exception ex)
        {

            await jsRuntime.ToasterError(ex.Message);
        }
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IFileUploader fileUploader { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime jsRuntime { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IRoomImgRep imgRep { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager manger { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IHotelRep hotelRep { get; set; }
    }
}
#pragma warning restore 1591
